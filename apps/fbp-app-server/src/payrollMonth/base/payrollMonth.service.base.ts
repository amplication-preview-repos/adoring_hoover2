/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PayrollMonth as PrismaPayrollMonth } from "@prisma/client";

export class PayrollMonthServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PayrollMonthCountArgs, "select">
  ): Promise<number> {
    return this.prisma.payrollMonth.count(args);
  }

  async payrollMonths<T extends Prisma.PayrollMonthFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayrollMonthFindManyArgs>
  ): Promise<PrismaPayrollMonth[]> {
    return this.prisma.payrollMonth.findMany<Prisma.PayrollMonthFindManyArgs>(
      args
    );
  }
  async payrollMonth<T extends Prisma.PayrollMonthFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayrollMonthFindUniqueArgs>
  ): Promise<PrismaPayrollMonth | null> {
    return this.prisma.payrollMonth.findUnique(args);
  }
  async createPayrollMonth<T extends Prisma.PayrollMonthCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayrollMonthCreateArgs>
  ): Promise<PrismaPayrollMonth> {
    return this.prisma.payrollMonth.create<T>(args);
  }
  async updatePayrollMonth<T extends Prisma.PayrollMonthUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayrollMonthUpdateArgs>
  ): Promise<PrismaPayrollMonth> {
    return this.prisma.payrollMonth.update<T>(args);
  }
  async deletePayrollMonth<T extends Prisma.PayrollMonthDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PayrollMonthDeleteArgs>
  ): Promise<PrismaPayrollMonth> {
    return this.prisma.payrollMonth.delete(args);
  }
}
